// DIGE tools
// July 16, 2018

macro "Save Inverted FITS" {
	run("Flip Vertically");
	run("FITS...", "");
	run("Flip Vertically");
}
macro "Cy5 Action Tool - C000C111C222C333C444D83C444D6dC444D8cC444D9bC444D56C444D5dC444D87Da9C444D44C444D6cC444D76C444D43D46D54D98C555D9aC555D47D67C555D45D4cD77D88D93C555D53D66C555D7dDaaC555D5cC555Da8C555D48C555D63D73D8dD97DabC555D57C555C666D9cC666D4dD7cC666D3cC666D99C666D86C666Da3C666C777D8bC888D55C888D64D74C888C999Da4C999D58C999DacC999D3dD84C999D94C999CaaaD37CaaaD35D62CaaaD33CaaaD72CaaaDa7CaaaD42CaaaD4bCaaaD34D36CbbbD8aD96CbbbDa2CbbbD9dCbbbD52CbbbD92CbbbD82CbbbD3bCbbbCcccD89CcccD78CcccCdddD7bCdddD32CdddD38CdddD5bD68CdddDb9CdddCeeeD6bCeeeD7eCeeeDa5DbbCeeeDb7CeeeDb8DbcCeeeD1bD1eCfffD49D4eDd6CfffD12D25CfffD1aD29D2cD65DadCfffD31D81CfffD4aD5eD8eD9fCfffD85DdaDffCfffD06D0fD41Dd3CfffD00D20Db2Db3DbeDc6Df5Df9CfffD04D28D60Da6Dc9DecCfffD08D0dD13D39D5fD7aD90DbaDc5Dd9De3CfffD0cD17Dc0Dc1DedCfffD61D7fDb0DceDe6DfeCfffD11D6aD6fDc2Df0CfffD23D27D50D91Db4DcfDe7Df4DfbCfffD3eD3fD9eDddDe8De9Df2CfffD01D02D03D05D07D09D0aD0bD0eD10D14D15D16D18D19D1cD1dD1fD21D22D24D26D2aD2bD2dD2eD2fD30D3aD40D4fD51D59D5aD69D6eD70D71D75D79D80D8fD95Da0Da1DaeDafDb1Db5Db6DbdDbfDc3Dc4Dc7Dc8DcaDcbDccDcdDd0Dd1Dd2Dd4Dd5Dd7Dd8DdbDdcDdeDdfDe0De1De2De4De5DeaDebDeeDefDf1Df3Df6Df7Df8DfaDfcDfd" {
     run("Red");
     run("RGB Color");
     run("Paste Control...");
     setPasteMode("Add");
     setPasteMode("Add");
     run("Copy");
     }

  macro "Cy3 & Save Action Tool - CfffD4eD55Da2Db6DbcCfffD2bD56CfffD79Db8CfffD2cDb4Db5CfffD45CfffCeeeD58DadCeeeD8eCeeeDa7CeeeDbbCeeeD57Db9DbaCeeeD5eCeeeD6bCeeeCdddD6eD7eCdddD7bCdddD42CdddD33CdddCcccD66CcccD34CcccD3dCcccCbbbD92CbbbCaaaD74CaaaD64CaaaC999D8aC999Da3C999C888D5bD76C888C777D3bC777D89C777D52D9dC777Da6C666C555DacC555Da8C555D85C555C444D68C444D82C444Da5C444Da4C444D3cC333D62D8bC333C222D54D72C222C111DabC111D4dDa9DaaC111C000D4bD67D84C000D43D44D4cD53D5cD5dD63D6cD6dD73D77D78D7cD7dD83D86D87D88D8cD8dD93D94D95D96D97D98D99D9aD9bD9c" {
     run("Green");
     run("RGB Color");
     run("Paste");
     saveAs("Jpeg");
     }

  macro "Make Stack & Save Action Tool - CfffCeeeCdddCcccCbbbCaaaC999C888C777C666C555D00D01D02D03D04D05D06D07D08D10D18D20D28D30D38D40D48D50D54D55D56D57D58D59D5aD5bD5cD5dD5eD5fD60D64D68D6fD70D74D78D7fD80D84D88D8fD90D91D92D93D94D95D96D97D98D9fDa4DafDb4DbfDc4DcfDd4DdfDe4DefDf4Df5Df6Df7Df8Df9DfaDfbDfcDfdDfeDff" {
		run("Images to Stack", "name=Stack title=[] use");
 		run("Animation Options...", "speed=2 first=1 last=2");
 		run("8-bit");
     }


  macro "Import XY... Action Tool - C402D5fD7eD7fD8eD8fD9fDaeDafDbfCfffD00D01D02D03D04D05D06D07D08D09D0aD0bD0cD0dD0eD0fD10D11D12D14D15D16D18D19D1aD1bD1cD1dD1eD1fD20D21D22D25D28D29D2aD2bD2cD2dD2eD2fD30D31D32D37D38D39D3aD3bD3cD3dD3eD40D41D42D48D49D4aD4bD4cD4dD50D51D52D55D58D59D5aD5bD5cD60D61D62D63D64D65D66D68D69D6aD6bD70D71D72D73D74D75D76D77D78D79D7aD80D81D82D83D84D85D86D87D88D89D8aD90D91D92D93D94D95D96D97D98D99D9aDa0Da1Da2Da5Da6Da7Da8DaaDabDb0Db1Db2DbaDbbDbcDc0Dc1Dc2Dc3Dc4Dc5DcaDcbDccDcdDd0Dd1Dd2Dd8Dd9DdaDdbDdcDddDdeDe0De1De2De6De7De8De9DeaDebDecDedDeeDefDf0Df1Df2Df3Df4Df5Df6Df7Df8Df9DfaDfbDfcDfdDfeDffC6aeDb4C624DadCdcdD6cC512D6dD6eD7cD7dCacfDe4C38eDd5CeffDb8C402D8dD9eC8beDd4C07dDc7CdefD13C513D6fCcdfD56C49eD27CfffDacDdfC7beD26D45Dc6Dd6C856D9cCedeD4eCdccD7bDbdC39eD46CeffD54D67Db7C8beD36C28eDb5CdefD47Dd3Dd7C513D8cD9dCcefDb3C5aeD34Da3De3CfffDceC745DbeDcfCdddD5dCbdfD17Da9C49eDc8C8bfDb6C17eD35C513D4fCcdfD43C5aeD53Ca89D8bCfeeD3fD9bC49eD23C9cfD24C38eD44Db9C523D5eCcdfDc9CfffD33De5CacfDa4C28eD57" {
	// ask for a file to be imported
	fileName = File.openDialog("Select the file to import");
	allText = File.openAsString(fileName);
	tmp = split(fileName,".");
	// get file format {txt, csv}
	posix = tmp[lengthOf(tmp)-1];
	// parse text by lines
	text = split(allText, "\n");

	// define array for points
	var xpoints = newArray;
	var ypoints = newArray;

	// in case input is in TXT format
	if (posix=="txt") {
		print("importing TXT point set...");
		//these are the column indexes
		hdr = split(text[0]);
		nbPoints = split(text[1]);
		iX = 0; iY = 1;
	// loading and parsing each line
	for (i = 2; i < (text.length); i++){
	   line = split(text[i]," ");
	   setOption("ExpandableArrays", true);
	   xpoints[i-2] = parseInt(line[iX]);
	   ypoints[i-2] = parseInt(line[iY]);
	   print("p("+i-1+") ["+xpoints[i-2]+"; "+ypoints[i-2]+"]");
		}
	// in case input is in CSV format
	} else if (posix=="csv") {
		print("importing CSV point set...");
	//these are the column indexes
	hdr = split(text[0]);
	iLabel = 0; iX = 1; iY = 2;
	// loading and parsing each line
	for (i = 1; i < (text.length); i++){
	   line = split(text[i],",");
	   setOption("ExpandableArrays", true);
	   xpoints[i-1] = parseInt(line[iX]);
	//Inverts the Y coordinate by subtracting from the width
	   ypoints[i-1] = parseInt(getHeight()-line[iY]);
	   print("p("+i+") ["+xpoints[i-1]+"; "+ypoints[i-1]+"]");
		}
	// in case of any other format
	} else {
	print("not supported format...");
	}

	// show the points in the image
	makeSelection("point", xpoints, ypoints);
	//setTool("multipoint");
	run("Point Tool...", "type=Dot color=Cyan size=Large show counter=0");
	run("Point Tool...", "type=Dot color=Cyan size=Large label show counter=0");
	}

macro "Export XY... Action Tool - C402D5aD7aD7bD8aD8bD9aDaaDabDbaCfffD00D01D02D03D04D05D06D07D08D09D0aD0bD0cD0dD0eD0fD10D11D13D14D15D17D18D19D1aD1bD1cD1dD1eD1fD20D21D24D27D28D29D2aD2bD2cD2dD2eD2fD30D31D36D37D38D39D3bD3cD3dD3eD3fD40D41D47D48D49D4cD4dD4eD4fD50D51D54D57D58D59D5dD5eD5fD60D61D62D63D64D65D67D68D69D6eD6fD70D71D72D73D74D75D76D77D78D79D7fD80D81D82D83D84D85D86D87D88D89D8fD90D91D92D93D94D95D96D97D98D99D9fDa0Da1Da4Da5Da6Da7Da9DaeDafDb0Db1Db9DbdDbeDbfDc0Dc1Dc2Dc3Dc4Dc9DccDcdDceDcfDd0Dd1Dd7Dd8Dd9DdbDdcDddDdeDdfDe0De1De5De6De7De8De9DeaDebDecDedDeeDefDf0Df1Df2Df3Df4Df5Df6Df7Df8Df9DfaDfbDfcDfdDfeDffC6aeDb3C634DacCdccD6dC502D6bCacfDe3C39eD45CdefD46Dd2Dd6C402D8cD9bC8beDb5Dd3C17eD34CdefD12Db2C513D4aD6aCbdfD16Da8C5aeD52CeffD66Db6Db7C7beD25Dc5Dd5C07dDc6CedeD4bC512D6cD7cD7dCdccD7eC49eD26CeffD53C9bfD35C38eD43Db8Dd4CfffDadDcbDdaC513D8dD9cCcdfD55C5aeD33Da2De2CfffD32De4C7aeD44C745DbbCeddD5cCacfDa3C49eD22Dc7C38eDb4C856D9dCeeeD9eCdcdDbcC9cfD23C523D5bCcdfDc8C745DcaC28eD56Ca89D8eCfeeD3aCcefD42" {
// clean results
run("Clear Results");
// get all points
getSelectionCoordinates(xCoordinates, yCoordinates);

// chose name pattern for exporting
fileName = File.openDialog("Select the file for export");

// Exporting as TXT format (ITK compatible)
file = File.open(fileName+".txt");
print(file, "point");
print(file, lengthOf(xCoordinates) );
for(i=0; i<lengthOf(xCoordinates); i++) {
    print(file, xCoordinates[i] + " " + yCoordinates[i]);
}

// export as CSV file
for(i=0; i<lengthOf(xCoordinates); i++) {
    setResult("X", i, xCoordinates[i]);
    setResult("Y", i, yCoordinates[i]);
}
updateResults();
saveAs("Results", fileName+".csv");
}
